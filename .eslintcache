[{"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js":"1","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js":"2","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js":"3","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js":"5","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js":"6","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js":"8","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js":"9","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js":"10","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js":"11","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js":"12","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataViz.js":"13","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DisplayData.js":"14","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataTest.js":"15","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\ConvertedData.js":"16"},{"size":151,"mtime":1607172802361,"results":"17","hashOfConfig":"18"},{"size":961,"mtime":1613381109045,"results":"19","hashOfConfig":"18"},{"size":177,"mtime":1607260744787,"results":"20","hashOfConfig":"18"},{"size":3445,"mtime":1613380836166,"results":"21","hashOfConfig":"18"},{"size":3160,"mtime":1609396257806,"results":"22","hashOfConfig":"18"},{"size":1172,"mtime":1611800050282,"results":"23","hashOfConfig":"18"},{"size":181,"mtime":1607332809170,"results":"24","hashOfConfig":"18"},{"size":6173,"mtime":1611799057642,"results":"25","hashOfConfig":"18"},{"size":4002,"mtime":1611798702517,"results":"26","hashOfConfig":"18"},{"size":245,"mtime":1607332794393,"results":"27","hashOfConfig":"18"},{"size":612,"mtime":1609692691531,"results":"28","hashOfConfig":"18"},{"size":11101,"mtime":1611800623919,"results":"29","hashOfConfig":"18"},{"size":2774,"mtime":1613381136232,"results":"30","hashOfConfig":"18"},{"size":1525,"mtime":1613347521650,"results":"31","hashOfConfig":"18"},{"size":6524,"mtime":1613370133991,"results":"32","hashOfConfig":"18"},{"size":6952,"mtime":1613381601596,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jlqu75",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js",[],["71","72"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js",["73"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js",["74"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js",["75","76","77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button } from \"../../globalStyles\";\r\nimport { FaGithub, FaFilePdf, FaYoutube } from \"react-icons/fa\";\r\nimport { SiAzuredevops } from \"react-icons/si\";\r\nimport { AiOutlineFileZip } from \"react-icons/ai\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nimport {\r\n  InfoSec,\r\n  InfoRow,\r\n  InfoColumn,\r\n  TextWrapper,\r\n  TopLine,\r\n  Heading,\r\n  Subtitle,\r\n  Subtitle2,\r\n  Subtitle3,\r\n  ImgWrapper,\r\n  Img,\r\n  Skills,\r\n  ContainerHeader,\r\n  ButtonItems,\r\n  ButtonItem,\r\n  TechWrapper,\r\n  Tech,\r\n  TechImage,\r\n} from \"./InfoSection.elements\";\r\n\r\nfunction InfoSection({\r\n  id,\r\n  primary,\r\n  lightBg,\r\n  topLine,\r\n  lightTopLine,\r\n  lightText,\r\n  lightTextDesc,\r\n  techsUsed,\r\n  extraBtn,\r\n  download,\r\n  skills,\r\n  headline,\r\n  description,\r\n  description2,\r\n  description3,\r\n  btnLink1,\r\n  btnLink2,\r\n  buttonLabel,\r\n  buttonLabel2,\r\n  img,\r\n  alt,\r\n  imgStart,\r\n  start,\r\n  AboutMeHeader,\r\n  logoName,\r\n  logoName2,\r\n  logoInfo,\r\n  youtubeVideo,\r\n  youtubeUrl,\r\n}) {\r\n  const [logos, setLogos] = useState([]);\r\n  const [mobileView, setMobileView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLogos(logoInfo);\r\n    if (window.innerWidth <= 960) {\r\n      setMobileView(false);\r\n    } else {\r\n      setMobileView(true);\r\n    }\r\n  }, []);\r\n\r\n  //console.log(logos)\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"650\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const mobileOpts = {\r\n    height: \"380\",\r\n    width: \"400\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfoSec lightBg={lightBg} id={id}>\r\n        <ContainerHeader lightText={lightText}>{AboutMeHeader}</ContainerHeader>\r\n        <Container>\r\n          <InfoRow imgStart={imgStart}>\r\n            <InfoColumn>\r\n              <TextWrapper>\r\n                <TopLine lightTopLine={lightTopLine}>{topLine}</TopLine>\r\n                <Heading lightText={lightText}>{headline}</Heading>\r\n                <Subtitle lightTextDesc={lightTextDesc}>{description}</Subtitle>\r\n                <Subtitle2 lightTextDesc={lightTextDesc}>\r\n                  {description2}\r\n                </Subtitle2>\r\n                <Subtitle3 lightTextDesc={lightTextDesc}>\r\n                  {description3}\r\n                </Subtitle3>\r\n                {!techsUsed ? null : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              alt={\"alt\"}\r\n                            />\r\n                            <ReactTooltip />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n                <a\r\n                  href={btnLink1}\r\n                  target=\"_blank\"\r\n                  aria-label=\"Logo\"\r\n                  download={download}\r\n                  rel=\"noopener\"\r\n                >\r\n                  <Button fontBig primary>\r\n                    <ButtonItems>\r\n                      <ButtonItem>\r\n                        {logoName === \"Github\" ? <FaGithub /> : null}\r\n                        {logoName === \"Resume\" ? <FaFilePdf /> : null}\r\n                        {logoName === \"Azure\" ? <SiAzuredevops /> : null}\r\n                        {logoName === \"Youtube\" ? <FaYoutube /> : null}\r\n                        {logoName === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                      </ButtonItem>\r\n                      <ButtonItem>{buttonLabel}</ButtonItem>\r\n                    </ButtonItems>\r\n                  </Button>\r\n                </a>\r\n                {!extraBtn ? null : (\r\n                  <a\r\n                    href={btnLink2}\r\n                    target=\"_blank\"\r\n                    aria-label=\"Logo\"\r\n                    rel=\"noopener\"\r\n                  >\r\n                    <Button fontBig primary>\r\n                      <ButtonItems>\r\n                        <ButtonItem>\r\n                          {logoName2 === \"Github\" ? <FaGithub /> : null}\r\n                          {logoName2 === \"Resume\" ? <FaFilePdf /> : null}\r\n                          {logoName2 === \"Azure\" ? <SiAzuredevops /> : null}\r\n                          {logoName2 === \"Youtube\" ? <FaYoutube /> : null}\r\n                          {logoName2 === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                        </ButtonItem>\r\n                        <ButtonItem>{buttonLabel2}</ButtonItem>\r\n                      </ButtonItems>\r\n                    </Button>\r\n                  </a>\r\n                )}\r\n              </TextWrapper>\r\n            </InfoColumn>\r\n            <InfoColumn>\r\n              <ImgWrapper start={start} skills={skills}>\r\n                {!skills ? (\r\n                  !youtubeVideo ? (\r\n                    <Img src={img} alt={alt} />\r\n                  ) : (\r\n                    <Youtube\r\n                      videoId={youtubeUrl}\r\n                      opts={mobileView ? opts : mobileOpts}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              skills={skills}\r\n                              alt={\"alt\"}\r\n                            />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n              </ImgWrapper>\r\n            </InfoColumn>\r\n          </InfoRow>\r\n        </Container>\r\n      </InfoSec>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoSection;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataViz.js",["79","80","81","82"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DisplayData.js",["83","84","85","86"],"import React, { useState } from \"react\";\r\nimport {\r\n  Engine,\r\n  RenderClones,\r\n  Walls,\r\n  Rectangle,\r\n  Circle,\r\n  Constraint,\r\n} from \"react-matter-js\";\r\nimport { Global, css } from \"@emotion/core\";\r\nimport * as pgm from \"matter-attractors\";\r\n\r\nconst DisplayData = ({ circleData }) => {\r\n  const [importedCircleData, setImportedCircleData] = useState(circleData);\r\n\r\n  const width = 1200;\r\n  const height = 600;\r\n\r\n  return (\r\n    <div>\r\n      <Global\r\n        styles={css`\r\n          body {\r\n            background: #111;\r\n          }\r\n        `}\r\n      />\r\n      <Engine options={{}}>\r\n        <RenderClones\r\n          enableMouse\r\n          options={{\r\n            width,\r\n            height,\r\n            background: \"transparent\",\r\n            wireframeBackground: \"transparent\",\r\n          }}\r\n        >\r\n          <Walls x={0} y={0} width={width} height={height} wallWidth={25} />\r\n          {importedCircleData &&\r\n            importedCircleData.map((data, idx) => {\r\n              return (\r\n                <>\r\n                  <Circle\r\n                    clone\r\n                    x={500}\r\n                    y={100}\r\n                    radius={data.Age > 100 ? Math.sqrt(data.Age) : data.Age}\r\n                    className={css``}\r\n                    cloneClass={css`\r\n                      fill: #61dafb;\r\n                    `}\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n        </RenderClones>\r\n      </Engine>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n",["87","88"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataTest.js",["89","90","91","92","93","94","95","96","97"],"// MatterStepThree.js\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Matter from \"matter-js\";\r\nimport MatterAttractors from \"matter-attractors\";\r\n\r\nconst STATIC_DENSITY = 55;\r\nconst PARTICLE_SIZE = 26;\r\n\r\nconst PARTICLE_BOUNCYNESS = 0.8;\r\n\r\nexport const DataTest = ({ circleData, largestCircle }) => {\r\n  const [importedCircleData, setImportedCircleData] = useState(circleData);\r\n  const [importedLargestCircle, setImportedLargestCircle] = useState(\r\n    largestCircle\r\n  );\r\n  const boxRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [constraints, setContraints] = useState();\r\n  const [scene, setScene] = useState();\r\n  const [someStateValue, setSomeStateValue] = useState(false);\r\n  const [firstBall, setFirstBall] = useState(false);\r\n  const [renderr, setRender] = useState();\r\n  const [enginee, setEngine] = useState();\r\n  const [highlighted, setHighlighted] = useState(false);\r\n\r\n  const handleResize = () => {\r\n    setContraints(boxRef.current.getBoundingClientRect());\r\n  };\r\n\r\n  const handleClick = () => {\r\n    importedCircleData.forEach((element) => {\r\n      setSomeStateValue(!someStateValue);\r\n    });\r\n  };\r\n\r\n  const getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n  };\r\n\r\n  useEffect(() => {\r\n    let Engine = Matter.Engine;\r\n    let Render = Matter.Render;\r\n    let World = Matter.World;\r\n    let Bodies = Matter.Bodies;\r\n    let engine = Engine.create({});\r\n    setEngine(engine);\r\n    Matter.use(MatterAttractors);\r\n    let render = Render.create({\r\n      element: boxRef.current,\r\n      engine: engine,\r\n      canvas: canvasRef.current,\r\n      options: {\r\n        background: \"transparent\",\r\n        wireframes: false,\r\n      },\r\n    });\r\n    setRender(render);\r\n    const floor = Bodies.rectangle(0, 0, 0, STATIC_DENSITY, {\r\n      isStatic: true,\r\n      render: {\r\n        fillStyle: \"red\",\r\n      },\r\n    });\r\n\r\n    World.add(engine.world, [\r\n      floor,\r\n      Bodies.rectangle(960, 0, window.innerWidth, 10, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: true,\r\n        },\r\n      }),\r\n      Bodies.rectangle(window.innerWidth, 300, 10, window.innerHeight, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: true,\r\n        },\r\n      }),\r\n      Bodies.rectangle(0, 300, 10, window.innerHeight, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: true,\r\n        },\r\n      }),\r\n    ]);\r\n    Engine.run(engine);\r\n    Render.run(render);\r\n    setContraints(boxRef.current.getBoundingClientRect());\r\n    setScene(render);\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (constraints) {\r\n      let { width, height } = constraints;\r\n      // Dynamically update canvas and bounds\r\n      scene.bounds.max.x = width;\r\n      scene.bounds.max.y = height;\r\n      scene.options.width = width;\r\n      scene.options.height = height;\r\n      scene.canvas.width = width;\r\n      scene.canvas.height = height;\r\n      // Dynamically update floor\r\n      const floor = scene.engine.world.bodies[0];\r\n\r\n      scene.engine.world.gravity.scale = 0;\r\n\r\n      Matter.Body.setPosition(floor, {\r\n        x: width / 2,\r\n        y: height + STATIC_DENSITY / 2,\r\n      });\r\n      Matter.Body.setVertices(floor, [\r\n        { x: 0, y: height },\r\n        { x: width, y: height },\r\n        { x: width, y: height + STATIC_DENSITY },\r\n        { x: 0, y: height + STATIC_DENSITY },\r\n      ]);\r\n    }\r\n  }, [scene, constraints]);\r\n\r\n  useEffect(() => {\r\n    // Add a new \"ball\" everytime `someStateValue` changes\r\n    if (scene) {\r\n      let { width, height } = constraints;\r\n      let centerX = width / 2;\r\n      let centerY = height / 2;\r\n\r\n      if (!firstBall) {\r\n        let attractiveBody = Matter.Bodies.circle(\r\n          centerX,\r\n          centerY,\r\n          importedLargestCircle > 100\r\n            ? Math.floor(Math.sqrt(importedLargestCircle * 2))\r\n            : importedLargestCircle,\r\n          {\r\n            // isStatic: true,\r\n            restitution: PARTICLE_BOUNCYNESS,\r\n            // example of an attractor function that\r\n            // returns a force vector that applies to bodyB\r\n            plugin: {\r\n              attractors: [\r\n                function (bodyA, bodyB) {\r\n                  return {\r\n                    x: (bodyA.position.x - bodyB.position.x) * 1e-6,\r\n                    y: (bodyA.position.y - bodyB.position.y) * 1e-6,\r\n                  };\r\n                },\r\n              ],\r\n            },\r\n          }\r\n        );\r\n\r\n        Matter.World.add(scene.engine.world, attractiveBody);\r\n\r\n        setFirstBall(true);\r\n      }\r\n      importedCircleData.forEach((element) => {\r\n        let randomX = Math.floor(Math.random() * -width) + width;\r\n        let randomY = Math.floor(Math.random() * -height) + height;\r\n        Matter.World.add(\r\n          scene.engine.world,\r\n          Matter.Bodies.circle(\r\n            randomX,\r\n            randomY,\r\n            importedLargestCircle > 100\r\n              ? Math.floor(Math.sqrt(element.Age * 2))\r\n              : element.Age,\r\n            {\r\n              restitution: PARTICLE_BOUNCYNESS,\r\n            }\r\n          )\r\n        );\r\n      });\r\n    }\r\n  }, [someStateValue]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        border: \"1px solid white\",\r\n        padding: \"8px\",\r\n      }}\r\n    >\r\n      <div style={{ textAlign: \"center\" }}>Checkout</div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr auto\",\r\n          rowGap: \"16px\",\r\n          marginBottom: \"32px\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"200px\", backgroundColor: \"gray\" }}></div>\r\n      </div>\r\n      <button\r\n        style={{\r\n          cursor: \"pointer\",\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          marginBottom: \"16px\",\r\n          width: \"100%\",\r\n        }}\r\n        onClick={() => handleClick()}\r\n      >\r\n        Display\r\n      </button>\r\n\r\n      <div\r\n        ref={boxRef}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          pointerEvents: \"none\",\r\n        }}\r\n      >\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\ConvertedData.js",["98","99","100","101","102","103","104","105","106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":18,"nodeType":"115","messageId":"116","endLine":7,"endColumn":24},{"ruleId":"113","severity":1,"message":"117","line":21,"column":10,"nodeType":"115","messageId":"116","endLine":21,"endColumn":16},{"ruleId":"113","severity":1,"message":"118","line":21,"column":3,"nodeType":"115","messageId":"116","endLine":21,"endColumn":9},{"ruleId":"119","severity":1,"message":"120","line":71,"column":6,"nodeType":"121","endLine":71,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":128,"column":19,"nodeType":"125","endLine":128,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":149,"column":21,"nodeType":"125","endLine":149,"endColumn":36},{"ruleId":"113","severity":1,"message":"126","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"127","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"128","line":7,"column":9,"nodeType":"115","messageId":"116","endLine":7,"endColumn":14},{"ruleId":"113","severity":1,"message":"129","line":8,"column":9,"nodeType":"115","messageId":"116","endLine":8,"endColumn":15},{"ruleId":"113","severity":1,"message":"130","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":12},{"ruleId":"113","severity":1,"message":"131","line":8,"column":3,"nodeType":"115","messageId":"116","endLine":8,"endColumn":13},{"ruleId":"113","severity":1,"message":"132","line":11,"column":13,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"113","severity":1,"message":"133","line":14,"column":30,"nodeType":"115","messageId":"116","endLine":14,"endColumn":51},{"ruleId":"109","replacedBy":"134"},{"ruleId":"111","replacedBy":"135"},{"ruleId":"113","severity":1,"message":"136","line":7,"column":7,"nodeType":"115","messageId":"116","endLine":7,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":12,"column":30,"nodeType":"115","messageId":"116","endLine":12,"endColumn":51},{"ruleId":"113","severity":1,"message":"137","line":13,"column":33,"nodeType":"115","messageId":"116","endLine":13,"endColumn":57},{"ruleId":"113","severity":1,"message":"138","line":22,"column":10,"nodeType":"115","messageId":"116","endLine":22,"endColumn":17},{"ruleId":"113","severity":1,"message":"139","line":23,"column":10,"nodeType":"115","messageId":"116","endLine":23,"endColumn":17},{"ruleId":"113","severity":1,"message":"140","line":24,"column":10,"nodeType":"115","messageId":"116","endLine":24,"endColumn":21},{"ruleId":"113","severity":1,"message":"141","line":24,"column":23,"nodeType":"115","messageId":"116","endLine":24,"endColumn":37},{"ruleId":"113","severity":1,"message":"142","line":36,"column":9,"nodeType":"115","messageId":"116","endLine":36,"endColumn":21},{"ruleId":"119","severity":1,"message":"143","line":183,"column":6,"nodeType":"121","endLine":183,"endColumn":22,"suggestions":"144"},{"ruleId":"113","severity":1,"message":"145","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":15},{"ruleId":"113","severity":1,"message":"146","line":6,"column":7,"nodeType":"115","messageId":"116","endLine":6,"endColumn":21},{"ruleId":"113","severity":1,"message":"136","line":7,"column":7,"nodeType":"115","messageId":"116","endLine":7,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":12,"column":30,"nodeType":"115","messageId":"116","endLine":12,"endColumn":51},{"ruleId":"113","severity":1,"message":"137","line":13,"column":33,"nodeType":"115","messageId":"116","endLine":13,"endColumn":57},{"ruleId":"113","severity":1,"message":"147","line":72,"column":11,"nodeType":"115","messageId":"116","endLine":72,"endColumn":15},{"ruleId":"113","severity":1,"message":"128","line":108,"column":13,"nodeType":"115","messageId":"116","endLine":108,"endColumn":18},{"ruleId":"113","severity":1,"message":"129","line":108,"column":20,"nodeType":"115","messageId":"116","endLine":108,"endColumn":26},{"ruleId":"113","severity":1,"message":"148","line":119,"column":11,"nodeType":"115","messageId":"116","endLine":119,"endColumn":18},{"ruleId":"113","severity":1,"message":"149","line":122,"column":11,"nodeType":"115","messageId":"116","endLine":122,"endColumn":16},{"ruleId":"119","severity":1,"message":"143","line":210,"column":6,"nodeType":"121","endLine":210,"endColumn":22,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'button' is assigned a value but never used.","'Skills' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logoInfo'. Either include it or remove the dependency array. If 'setLogos' needs the current value of 'logoInfo', you can also switch to useReducer instead of useState and read 'logoInfo' in the reducer.","ArrayExpression",["153"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useEffect' is defined but never used.","'styled' is defined but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'Rectangle' is defined but never used.","'Constraint' is defined but never used.","'pgm' is defined but never used.","'setImportedCircleData' is assigned a value but never used.",["151"],["152"],"'PARTICLE_SIZE' is assigned a value but never used.","'setImportedLargestCircle' is assigned a value but never used.","'renderr' is assigned a value but never used.","'enginee' is assigned a value but never used.","'highlighted' is assigned a value but never used.","'setHighlighted' is assigned a value but never used.","'getRandomInt' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'constraints', 'firstBall', 'importedCircleData', 'importedLargestCircle', and 'scene'. Either include them or remove the dependency array.",["154"],"'Scene' is defined but never used.","'STATIC_DENSITY' is assigned a value but never used.","'ball' is assigned a value but never used.","'centerX' is assigned a value but never used.","'mouse' is assigned a value but never used.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},"Update the dependencies array to be: [logoInfo]",{"range":"161","text":"162"},"Update the dependencies array to be: [constraints, firstBall, importedCircleData, importedLargestCircle, scene, someStateValue]",{"range":"163","text":"164"},{"range":"165","text":"164"},[1341,1343],"[logoInfo]",[5441,5457],"[constraints, firstBall, importedCircleData, importedLargestCircle, scene, someStateValue]",[6103,6119]]