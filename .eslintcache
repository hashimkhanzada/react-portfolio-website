[{"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js":"1","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js":"2","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js":"3","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js":"5","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js":"6","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js":"8","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js":"9","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js":"10","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js":"11","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js":"12"},{"size":151,"mtime":1607172802361,"results":"13","hashOfConfig":"14"},{"size":474,"mtime":1607397860952,"results":"15","hashOfConfig":"14"},{"size":177,"mtime":1607260744787,"results":"16","hashOfConfig":"14"},{"size":3445,"mtime":1607766242548,"results":"17","hashOfConfig":"14"},{"size":3160,"mtime":1609396257806,"results":"18","hashOfConfig":"14"},{"size":1172,"mtime":1611800050282,"results":"19","hashOfConfig":"14"},{"size":181,"mtime":1607332809170,"results":"20","hashOfConfig":"14"},{"size":6173,"mtime":1611799057642,"results":"21","hashOfConfig":"14"},{"size":4002,"mtime":1611798702517,"results":"22","hashOfConfig":"14"},{"size":245,"mtime":1607332794393,"results":"23","hashOfConfig":"14"},{"size":612,"mtime":1609692691531,"results":"24","hashOfConfig":"14"},{"size":11101,"mtime":1611800623919,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1k50qzf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js",[],["53","54"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js",["55"],"import React, { useState, useEffect } from \"react\";\r\nimport { FaBars, FaTimes, FaGithub, FaLinkedin } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\n\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  NavIcon,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  SocialIconLink,\r\n} from \"./Navbar.elements\";\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener(\"resize\", showButton);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavbarContainer>\r\n            <NavLogo to=\"#\" onClick={(closeMobileMenu, scrollToTop)}>\r\n              <NavIcon />\r\n              HASHIM KHANZADA\r\n            </NavLogo>\r\n            <MobileIcon onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </MobileIcon>\r\n            <NavMenu onClick={handleClick} click={click}>\r\n              <NavItem>\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"aboutMe\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <NavLinks>About</NavLinks>\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"dietTracker\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-70}\r\n                  duration={500}\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <NavLinks>Projects</NavLinks>\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"https://github.com/hashimkhanzada\"}\r\n                  target=\"_blank\"\r\n                  aria-label=\"GitHub\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <FaGithub />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"https://www.linkedin.com/in/hashim-khanzada/\"}\r\n                  target=\"_blank\"\r\n                  aria-label=\"GitHub\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <FaLinkedin />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"mailto:hashimkhanzada@gmail.com\"}\r\n                  aria-label=\"Email\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <HiOutlineMail />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n            </NavMenu>\r\n          </NavbarContainer>\r\n        </Nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js",["56","57","58","59"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button } from \"../../globalStyles\";\r\nimport { FaGithub, FaFilePdf, FaYoutube } from \"react-icons/fa\";\r\nimport { SiAzuredevops } from \"react-icons/si\";\r\nimport { AiOutlineFileZip } from \"react-icons/ai\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nimport {\r\n  InfoSec,\r\n  InfoRow,\r\n  InfoColumn,\r\n  TextWrapper,\r\n  TopLine,\r\n  Heading,\r\n  Subtitle,\r\n  Subtitle2,\r\n  Subtitle3,\r\n  ImgWrapper,\r\n  Img,\r\n  Skills,\r\n  ContainerHeader,\r\n  ButtonItems,\r\n  ButtonItem,\r\n  TechWrapper,\r\n  Tech,\r\n  TechImage,\r\n} from \"./InfoSection.elements\";\r\n\r\nfunction InfoSection({\r\n  id,\r\n  primary,\r\n  lightBg,\r\n  topLine,\r\n  lightTopLine,\r\n  lightText,\r\n  lightTextDesc,\r\n  techsUsed,\r\n  extraBtn,\r\n  download,\r\n  skills,\r\n  headline,\r\n  description,\r\n  description2,\r\n  description3,\r\n  btnLink1,\r\n  btnLink2,\r\n  buttonLabel,\r\n  buttonLabel2,\r\n  img,\r\n  alt,\r\n  imgStart,\r\n  start,\r\n  AboutMeHeader,\r\n  logoName,\r\n  logoName2,\r\n  logoInfo,\r\n  youtubeVideo,\r\n  youtubeUrl,\r\n}) {\r\n  const [logos, setLogos] = useState([]);\r\n  const [mobileView, setMobileView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLogos(logoInfo);\r\n    if (window.innerWidth <= 960) {\r\n      setMobileView(false);\r\n    } else {\r\n      setMobileView(true);\r\n    }\r\n  }, []);\r\n\r\n  //console.log(logos)\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"650\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const mobileOpts = {\r\n    height: \"380\",\r\n    width: \"400\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfoSec lightBg={lightBg} id={id}>\r\n        <ContainerHeader lightText={lightText}>{AboutMeHeader}</ContainerHeader>\r\n        <Container>\r\n          <InfoRow imgStart={imgStart}>\r\n            <InfoColumn>\r\n              <TextWrapper>\r\n                <TopLine lightTopLine={lightTopLine}>{topLine}</TopLine>\r\n                <Heading lightText={lightText}>{headline}</Heading>\r\n                <Subtitle lightTextDesc={lightTextDesc}>{description}</Subtitle>\r\n                <Subtitle2 lightTextDesc={lightTextDesc}>\r\n                  {description2}\r\n                </Subtitle2>\r\n                <Subtitle3 lightTextDesc={lightTextDesc}>\r\n                  {description3}\r\n                </Subtitle3>\r\n                {!techsUsed ? null : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              alt={\"alt\"}\r\n                            />\r\n                            <ReactTooltip />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n                <a\r\n                  href={btnLink1}\r\n                  target=\"_blank\"\r\n                  aria-label=\"Logo\"\r\n                  download={download}\r\n                  rel=\"noopener\"\r\n                >\r\n                  <Button fontBig primary>\r\n                    <ButtonItems>\r\n                      <ButtonItem>\r\n                        {logoName === \"Github\" ? <FaGithub /> : null}\r\n                        {logoName === \"Resume\" ? <FaFilePdf /> : null}\r\n                        {logoName === \"Azure\" ? <SiAzuredevops /> : null}\r\n                        {logoName === \"Youtube\" ? <FaYoutube /> : null}\r\n                        {logoName === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                      </ButtonItem>\r\n                      <ButtonItem>{buttonLabel}</ButtonItem>\r\n                    </ButtonItems>\r\n                  </Button>\r\n                </a>\r\n                {!extraBtn ? null : (\r\n                  <a\r\n                    href={btnLink2}\r\n                    target=\"_blank\"\r\n                    aria-label=\"Logo\"\r\n                    rel=\"noopener\"\r\n                  >\r\n                    <Button fontBig primary>\r\n                      <ButtonItems>\r\n                        <ButtonItem>\r\n                          {logoName2 === \"Github\" ? <FaGithub /> : null}\r\n                          {logoName2 === \"Resume\" ? <FaFilePdf /> : null}\r\n                          {logoName2 === \"Azure\" ? <SiAzuredevops /> : null}\r\n                          {logoName2 === \"Youtube\" ? <FaYoutube /> : null}\r\n                          {logoName2 === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                        </ButtonItem>\r\n                        <ButtonItem>{buttonLabel2}</ButtonItem>\r\n                      </ButtonItems>\r\n                    </Button>\r\n                  </a>\r\n                )}\r\n              </TextWrapper>\r\n            </InfoColumn>\r\n            <InfoColumn>\r\n              <ImgWrapper start={start} skills={skills}>\r\n                {!skills ? (\r\n                  !youtubeVideo ? (\r\n                    <Img src={img} alt={alt} />\r\n                  ) : (\r\n                    <Youtube\r\n                      videoId={youtubeUrl}\r\n                      opts={mobileView ? opts : mobileOpts}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              skills={skills}\r\n                              alt={\"alt\"}\r\n                            />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n              </ImgWrapper>\r\n            </InfoColumn>\r\n          </InfoRow>\r\n        </Container>\r\n      </InfoSec>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoSection;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":21,"column":10,"nodeType":"66","messageId":"67","endLine":21,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":21,"column":3,"nodeType":"66","messageId":"67","endLine":21,"endColumn":9},{"ruleId":"69","severity":1,"message":"70","line":71,"column":6,"nodeType":"71","endLine":71,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":128,"column":19,"nodeType":"75","endLine":128,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":149,"column":21,"nodeType":"75","endLine":149,"endColumn":36},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar","'Skills' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logoInfo'. Either include it or remove the dependency array. If 'setLogos' needs the current value of 'logoInfo', you can also switch to useReducer instead of useState and read 'logoInfo' in the reducer.","ArrayExpression",["78"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [logoInfo]",{"range":"81","text":"82"},[1341,1343],"[logoInfo]"]