[{"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js":"1","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js":"2","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js":"3","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js":"5","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js":"6","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js":"8","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js":"9","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js":"10","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js":"11","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js":"12","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataViz.js":"13","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\ConvertedData.js":"14"},{"size":151,"mtime":1607172802361,"results":"15","hashOfConfig":"16"},{"size":589,"mtime":1613609943154,"results":"17","hashOfConfig":"16"},{"size":177,"mtime":1607260744787,"results":"18","hashOfConfig":"16"},{"size":2835,"mtime":1613562530270,"results":"19","hashOfConfig":"16"},{"size":3169,"mtime":1613562660395,"results":"20","hashOfConfig":"16"},{"size":1184,"mtime":1613547708980,"results":"21","hashOfConfig":"16"},{"size":181,"mtime":1607332809170,"results":"22","hashOfConfig":"16"},{"size":6193,"mtime":1613563409568,"results":"23","hashOfConfig":"16"},{"size":4002,"mtime":1613563029663,"results":"24","hashOfConfig":"16"},{"size":245,"mtime":1607332794393,"results":"25","hashOfConfig":"16"},{"size":612,"mtime":1609692691531,"results":"26","hashOfConfig":"16"},{"size":11203,"mtime":1613563417821,"results":"27","hashOfConfig":"16"},{"size":11337,"mtime":1613609884734,"results":"28","hashOfConfig":"16"},{"size":7958,"mtime":1613557493530,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1k50qzf",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\index.js",[],["64","65"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\App.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\index.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.js",["66","67","68","69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FaBars,\r\n  FaTimes,\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaChartPie,\r\n} from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\n\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  NavIcon,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  SocialIconLink,\r\n} from \"./Navbar.elements\";\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener(\"resize\", showButton);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavbarContainer>\r\n            <NavLogo to=\"/\" onClick={closeMobileMenu}>\r\n              <NavIcon />\r\n              HASHIM KHANZADA\r\n            </NavLogo>\r\n            <MobileIcon onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </MobileIcon>\r\n            <NavMenu onClick={handleClick} click={click}>\r\n              <NavItem>\r\n                <NavLinks to=\"/DataViz\" onClick={closeMobileMenu}>\r\n                  <FaChartPie style={{ marginRight: \"5px\" }} />\r\n                  Data Visualizer\r\n                </NavLinks>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"https://github.com/hashimkhanzada\"}\r\n                  target=\"_blank\"\r\n                  aria-label=\"GitHub\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <FaGithub />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"https://www.linkedin.com/in/hashim-khanzada/\"}\r\n                  target=\"_blank\"\r\n                  aria-label=\"GitHub\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <FaLinkedin />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <SocialIconLink\r\n                  href={\"mailto:hashimkhanzada@gmail.com\"}\r\n                  aria-label=\"Email\"\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  <HiOutlineMail />\r\n                </SocialIconLink>\r\n              </NavItem>\r\n            </NavMenu>\r\n          </NavbarContainer>\r\n        </Nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Navbar\\Navbar.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\globalStyles.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.js",["71","72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button } from \"../../globalStyles\";\r\nimport { FaGithub, FaFilePdf, FaYoutube, FaChartPie } from \"react-icons/fa\";\r\nimport { SiAzuredevops } from \"react-icons/si\";\r\nimport { AiOutlineFileZip } from \"react-icons/ai\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Youtube from \"react-youtube\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  InfoSec,\r\n  InfoRow,\r\n  InfoColumn,\r\n  TextWrapper,\r\n  TopLine,\r\n  Heading,\r\n  Subtitle,\r\n  Subtitle2,\r\n  Subtitle3,\r\n  ImgWrapper,\r\n  Img,\r\n  Skills,\r\n  ContainerHeader,\r\n  ButtonItems,\r\n  ButtonItem,\r\n  TechWrapper,\r\n  Tech,\r\n  TechImage,\r\n} from \"./InfoSection.elements\";\r\n\r\nfunction InfoSection({\r\n  id,\r\n  primary,\r\n  lightBg,\r\n  topLine,\r\n  lightTopLine,\r\n  lightText,\r\n  lightTextDesc,\r\n  techsUsed,\r\n  extraBtn,\r\n  download,\r\n  skills,\r\n  headline,\r\n  description,\r\n  description2,\r\n  description3,\r\n  btnLink1,\r\n  btnLink2,\r\n  buttonLabel,\r\n  buttonLabel2,\r\n  img,\r\n  alt,\r\n  imgStart,\r\n  start,\r\n  AboutMeHeader,\r\n  logoName,\r\n  logoName2,\r\n  logoInfo,\r\n  youtubeVideo,\r\n  youtubeUrl,\r\n}) {\r\n  const [logos, setLogos] = useState([]);\r\n  const [mobileView, setMobileView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLogos(logoInfo);\r\n    if (window.innerWidth <= 960) {\r\n      setMobileView(false);\r\n    } else {\r\n      setMobileView(true);\r\n    }\r\n  }, []);\r\n\r\n  //console.log(logos)\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"650\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const mobileOpts = {\r\n    height: \"380\",\r\n    width: \"400\",\r\n    playersVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfoSec lightBg={lightBg} id={id}>\r\n        <ContainerHeader lightText={lightText}>{AboutMeHeader}</ContainerHeader>\r\n        <Container>\r\n          <InfoRow imgStart={imgStart}>\r\n            <InfoColumn>\r\n              <TextWrapper>\r\n                <TopLine lightTopLine={lightTopLine}>{topLine}</TopLine>\r\n                <Heading lightText={lightText}>{headline}</Heading>\r\n                <Subtitle lightTextDesc={lightTextDesc}>{description}</Subtitle>\r\n                <Subtitle2 lightTextDesc={lightTextDesc}>\r\n                  {description2}\r\n                </Subtitle2>\r\n                <Subtitle3 lightTextDesc={lightTextDesc}>\r\n                  {description3}\r\n                </Subtitle3>\r\n                {!techsUsed ? null : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              alt={\"alt\"}\r\n                            />\r\n                            <ReactTooltip />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n                <a\r\n                  href={btnLink1}\r\n                  target=\"_blank\"\r\n                  aria-label=\"Logo\"\r\n                  download={download}\r\n                  rel=\"noopener\"\r\n                >\r\n                  <Button fontBig primary>\r\n                    <ButtonItems>\r\n                      <ButtonItem>\r\n                        {logoName === \"Github\" ? <FaGithub /> : null}\r\n                        {logoName === \"Resume\" ? <FaFilePdf /> : null}\r\n                        {logoName === \"Azure\" ? <SiAzuredevops /> : null}\r\n                        {logoName === \"Youtube\" ? <FaYoutube /> : null}\r\n                        {logoName === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                      </ButtonItem>\r\n                      <ButtonItem>{buttonLabel}</ButtonItem>\r\n                    </ButtonItems>\r\n                  </Button>\r\n                </a>\r\n                {!extraBtn ? null : (\r\n                  <Link to=\"./DataViz\">\r\n                    <Button fontBig primary>\r\n                      <ButtonItems>\r\n                        <ButtonItem>\r\n                          {logoName2 === \"Github\" ? <FaGithub /> : null}\r\n                          {logoName2 === \"Resume\" ? <FaFilePdf /> : null}\r\n                          {logoName2 === \"Azure\" ? <SiAzuredevops /> : null}\r\n                          {logoName2 === \"Youtube\" ? <FaYoutube /> : null}\r\n                          {logoName2 === \"Zip\" ? <AiOutlineFileZip /> : null}\r\n                          {logoName2 === \"Data\" ? <FaChartPie /> : null}\r\n                        </ButtonItem>\r\n                        <ButtonItem>{buttonLabel2}</ButtonItem>\r\n                      </ButtonItems>\r\n                    </Button>\r\n                  </Link>\r\n                )}\r\n              </TextWrapper>\r\n            </InfoColumn>\r\n            <InfoColumn>\r\n              <ImgWrapper start={start} skills={skills}>\r\n                {!skills ? (\r\n                  !youtubeVideo ? (\r\n                    <Img src={img} alt={alt} />\r\n                  ) : (\r\n                    <Youtube\r\n                      videoId={youtubeUrl}\r\n                      opts={mobileView ? opts : mobileOpts}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <TechWrapper skills={skills}>\r\n                    {logos &&\r\n                      logos.map((logo) => {\r\n                        return (\r\n                          <Tech>\r\n                            <TechImage\r\n                              key={logo.imgUrl}\r\n                              src={logo.imgUrl}\r\n                              data-tip={logo.tipText}\r\n                              skills={skills}\r\n                              alt={\"alt\"}\r\n                            />\r\n                          </Tech>\r\n                        );\r\n                      })}\r\n                  </TechWrapper>\r\n                )}\r\n              </ImgWrapper>\r\n            </InfoColumn>\r\n          </InfoRow>\r\n        </Container>\r\n      </InfoSec>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoSection;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\InfoSection\\InfoSection.elements.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\components\\Footer\\Footer.elements.js",[],["77","78"],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Home.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\HomePage\\Data.js",[],"C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\DataViz.js",["79","80","81","82","83"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { parse } from \"papaparse\";\r\nimport styled from \"styled-components\";\r\nimport { ConvertedData } from \"./ConvertedData\";\r\nimport { Button } from \"../../globalStyles\";\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  height: calc(100vh - 80px);\r\n  background-color: #4b59f7;\r\n  width: 100%;\r\n  color: white;\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0.75;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #fff;\r\n\r\n  @media screen and (max-width: 1100px) {\r\n  }\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0.25;\r\n  background-color: ${({ highlighted }) =>\r\n    highlighted ? \"#4C5D6B\" : \"#3b4954\"};\r\n\r\n  @media screen and (max-width: 1100px) {\r\n  }\r\n`;\r\n\r\nconst SelectBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 15px 20px;\r\n  @media screen and (max-width: 1100px) {\r\n  }\r\n`;\r\n\r\nconst SelectInput = styled.select`\r\n  color: #a0b0bb;\r\n  background-color: #3b4954;\r\n  text-transform: capitalize;\r\n  font-size: 22px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n\r\n  option {\r\n    color: #fff;\r\n  }\r\n  &:focus {\r\n    outline-width: 0;\r\n  }\r\n`;\r\n\r\nconst BodyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n  overflow: hidden;\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BodyData = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n  overflow-y: auto;\r\n  @media screen and (max-width: 1100px) {\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    height: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst BodyItem = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n  border-top: solid 1px #2a343c;\r\n\r\n  &:hover {\r\n    transition: all 0.3s ease-out;\r\n    background: #2a343c;\r\n  }\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    flex-direction: column;\r\n    justify-content: normal;\r\n    border-right: solid 1px #2a343c;\r\n    padding: 10px 25px;\r\n    border-bottom: solid 1px #2a343c;\r\n  }\r\n`;\r\n\r\nconst ColumnTitle = styled.p`\r\n  font-size: 22px;\r\n  text-transform: capitalize;\r\n  margin-bottom: 4px;\r\n  @media screen and (max-width: 1100px) {\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnData = styled.p`\r\n  font-size: 17px;\r\n  align-self: right;\r\n  @media screen and (max-width: 1100px) {\r\n  }\r\n`;\r\n\r\nconst DataViz = () => {\r\n  const width = 1200;\r\n  const height = 800;\r\n\r\n  const dataRef = useRef(null);\r\n  const [dimensions, setDimensions] = useState();\r\n  const [highlighted, setHighlighted] = useState(false);\r\n  const [columnNames, setColumnNames] = useState([]);\r\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\r\n  const [importedData, setImportedData] = useState([]);\r\n  const [largestCircle, setLargestCircle] = useState(0);\r\n  const [isNumberColumn, setIsNumberColumn] = useState(false);\r\n  const [largestRadius, setLargestRadius] = useState(0);\r\n  const [bodyInfo, setBodyInfo] = useState();\r\n  const [introData, setIntroData] = useState(\r\n    \"A basic data visualizer that converts data from a .CSV file and displays them as movable objects.\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    let asd = dataRef.current.getBoundingClientRect();\r\n    setDimensions({ width: asd.width, height: asd.height });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (importedData.length > 0) {\r\n      setColumnNames(Object.keys(importedData[0]));\r\n    }\r\n  }, [importedData]);\r\n\r\n  useEffect(() => {\r\n    if (dimensions && importedData) {\r\n      let addArray = [];\r\n      let largestNum = Math.max.apply(\r\n        Math,\r\n        importedData.map(function (o) {\r\n          addArray.push(Math.floor(o[selectedColumn]));\r\n          return o[selectedColumn];\r\n        })\r\n      );\r\n      let sum = addArray.reduce((a, b) => a + b, 0);\r\n      let multi = 1.2;\r\n      let maxRadius = 170;\r\n\r\n      if (window.innerWidth < 1100) {\r\n        multi = 1.7;\r\n      }\r\n\r\n      let allowedRad = Math.floor(\r\n        (dimensions.width + dimensions.height) / multi\r\n      );\r\n      let totalRad = Math.floor((sum / largestNum) * maxRadius);\r\n\r\n      while (totalRad > allowedRad) {\r\n        maxRadius -= 2;\r\n        totalRad = Math.floor((sum / largestNum) * maxRadius);\r\n      }\r\n\r\n      setLargestRadius(maxRadius);\r\n      setIsNumberColumn(false);\r\n\r\n      if (Number.isInteger(Math.floor(largestNum))) {\r\n        setIsNumberColumn(true);\r\n        setIntroData(\"Click on an object to display related data\");\r\n      } else {\r\n        setBodyInfo(\"\");\r\n      }\r\n\r\n      setLargestCircle(largestNum);\r\n    }\r\n  }, [selectedColumn, dimensions]);\r\n\r\n  const displayData = (b) => {\r\n    setBodyInfo(b);\r\n  };\r\n\r\n  const convertFiles = (x) => {\r\n    setHighlighted(false);\r\n\r\n    Array.from(x)\r\n      .filter((file) => file.type === \"application/vnd.ms-excel\")\r\n      .forEach(async (file) => {\r\n        const text = await file.text();\r\n\r\n        const result = parse(text, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          preview: 50,\r\n        });\r\n\r\n        setImportedData(result.data);\r\n        setIntroData(\r\n          \"Only columns that contain numbers can be displayed as objects. Refresh the page if any issues occur.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MainContainer\r\n      onDragOver={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      onDrop={(e) => {\r\n        e.preventDefault();\r\n        convertFiles(e.dataTransfer.files);\r\n      }}\r\n    >\r\n      <LeftColumn\r\n        highlighted={highlighted}\r\n        onDragEnter={() => {\r\n          setHighlighted(true);\r\n        }}\r\n        onDragLeave={() => {\r\n          setHighlighted(false);\r\n        }}\r\n      >\r\n        <BodyContainer>\r\n          <SelectBlock>\r\n            {importedData.length == 0 && (\r\n              <>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e) => {\r\n                    convertFiles(e.target.files);\r\n                  }}\r\n                  style={{\r\n                    marginBottom: \"20px\",\r\n                    borderRadius: \"5px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                />\r\n                <Button\r\n                  primary\r\n                  fontBig\r\n                  onClick={() => {\r\n                    setImportedData([\r\n                      {\r\n                        Name: \"Lala bhai\",\r\n                        Age: 55,\r\n                      },\r\n                      {\r\n                        Name: \"Daddu\",\r\n                        Age: 27,\r\n                      },\r\n                      {\r\n                        Name: \"Adz Goming\",\r\n                        Age: 15,\r\n                      },\r\n                      {\r\n                        Name: \"Geazy\",\r\n                        Age: 30,\r\n                      },\r\n                      {\r\n                        Name: \"Nadir Qureshi\",\r\n                        Age: 20,\r\n                      },\r\n                      {\r\n                        Name: \"Neil Buckin\",\r\n                        Age: 19,\r\n                      },\r\n                      {\r\n                        Name: \"ok\",\r\n                        Age: 15,\r\n                      },\r\n                      {\r\n                        Name: \"test\",\r\n                        Age: 27,\r\n                      },\r\n                      {\r\n                        Name: \"cvb\",\r\n                        Age: 12,\r\n                      },\r\n                      {\r\n                        Name: \",mn\",\r\n                        Age: 14,\r\n                      },\r\n                      {\r\n                        Name: \"oiu\",\r\n                        Age: 12,\r\n                      },\r\n                      {\r\n                        Name: \"hgd\",\r\n                        Age: 21,\r\n                      },\r\n                      {\r\n                        Name: \"asdf\",\r\n                        Age: 12,\r\n                      },\r\n                      {\r\n                        Name: \"fds\",\r\n                        Age: 10,\r\n                      },\r\n                      {\r\n                        Name: \"qwe\",\r\n                        Age: 19,\r\n                      },\r\n                      {\r\n                        Name: \"tre\",\r\n                        Age: 18,\r\n                      },\r\n                      {\r\n                        Name: \"tsm wadan\",\r\n                        Age: 5,\r\n                      },\r\n                      {\r\n                        Name: \"chapri\",\r\n                        Age: 2,\r\n                      },\r\n                      {\r\n                        Name: \"faze basil\",\r\n                        Age: 4,\r\n                      },\r\n                    ]);\r\n                    setIntroData(\r\n                      \"Only columns that contain numbers can be displayed as objects. Refresh the page if any issues occur.\"\r\n                    );\r\n                  }}\r\n                  style={{\r\n                    marginBottom: \"20px\",\r\n                  }}\r\n                >\r\n                  Load Sample Data\r\n                </Button>\r\n              </>\r\n            )}\r\n            {importedData.length > 0 && (\r\n              <SelectInput\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setSelectedColumn(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"\" defaultValue>\r\n                  - select a column with numbers -\r\n                </option>\r\n                {columnNames &&\r\n                  columnNames.map((data) => {\r\n                    return (\r\n                      <option key={data} value={data}>\r\n                        {data}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </SelectInput>\r\n            )}\r\n          </SelectBlock>\r\n\r\n          <BodyData>\r\n            {bodyInfo ? (\r\n              columnNames.map((data, idx) => {\r\n                return (\r\n                  <BodyItem key={data}>\r\n                    <ColumnTitle>{data}:</ColumnTitle>\r\n                    <ColumnData>{bodyInfo[data]}</ColumnData>\r\n                  </BodyItem>\r\n                );\r\n              })\r\n            ) : (\r\n              <BodyItem>\r\n                <ColumnData>{introData}</ColumnData>\r\n              </BodyItem>\r\n            )}\r\n          </BodyData>\r\n        </BodyContainer>\r\n      </LeftColumn>\r\n      <RightColumn ref={dataRef}>\r\n        {importedData.length > 0 && isNumberColumn ? (\r\n          <ConvertedData\r\n            key={selectedColumn}\r\n            circleData={importedData}\r\n            largestCircle={largestCircle}\r\n            selectedColumn={selectedColumn}\r\n            maxRadius={largestRadius}\r\n            showCircleData={displayData}\r\n          />\r\n        ) : (\r\n          importedData.length == 0 && (\r\n            <h1\r\n              style={{ color: \"gray\", textAlign: \"center\", marginTop: \"2vh\" }}\r\n            >\r\n              Drag and Drop a .CSV file\r\n            </h1>\r\n          )\r\n        )}\r\n      </RightColumn>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default DataViz;\r\n","C:\\Users\\hashim khanzada\\react-website-portfolio\\src\\pages\\DataVisualizerPage\\ConvertedData.js",["84","85","86","87","88"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Matter from \"matter-js\";\r\nimport MatterAttractors from \"matter-attractors\";\r\n\r\nconst PARTICLE_BOUNCYNESS = 0.1;\r\n\r\nexport const ConvertedData = ({\r\n  circleData,\r\n  largestCircle,\r\n  selectedColumn,\r\n  maxRadius,\r\n  showCircleData,\r\n}) => {\r\n  const [importedCircleData, setImportedCircleData] = useState(circleData);\r\n  const boxRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [constraints, setContraints] = useState();\r\n  const [scene, setScene] = useState();\r\n  const [someStateValue, setSomeStateValue] = useState(false);\r\n  const [firstBall, setFirstBall] = useState(false);\r\n\r\n  const getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n  };\r\n\r\n  useEffect(() => {\r\n    importedCircleData.forEach((element) => {\r\n      setSomeStateValue(!someStateValue);\r\n    });\r\n  }, [importedCircleData]);\r\n\r\n  useEffect(() => {\r\n    let Engine = Matter.Engine;\r\n    let Render = Matter.Render;\r\n    let World = Matter.World;\r\n    let Bodies = Matter.Bodies;\r\n    let engine = Engine.create({});\r\n\r\n    Matter.use(MatterAttractors);\r\n\r\n    let render = Render.create({\r\n      element: boxRef.current,\r\n      engine: engine,\r\n      canvas: canvasRef.current,\r\n      options: {\r\n        // width: window.innerWidth,\r\n        // height: window.innerHeight - 300,\r\n        background: \"white\",\r\n        wireframes: false,\r\n      },\r\n    });\r\n\r\n    const floor = Bodies.rectangle(0, 0, 10, 10, {\r\n      isStatic: true,\r\n      render: {\r\n        visible: false,\r\n      },\r\n    });\r\n\r\n    World.add(engine.world, [\r\n      floor,\r\n      Bodies.rectangle(0, 0, 10, 10, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      }),\r\n      Bodies.rectangle(0, 0, 10, 10, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      }),\r\n      Bodies.rectangle(0, 0, 10, 10, {\r\n        isStatic: true,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      }),\r\n    ]);\r\n    Engine.run(engine);\r\n    Render.run(render);\r\n\r\n    setContraints(boxRef.current.getBoundingClientRect());\r\n    setScene(render);\r\n\r\n    // window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     window.removeEventListener(\"resize\", handleResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (constraints) {\r\n      let { width, height } = constraints;\r\n\r\n      scene.bounds.max.x = width;\r\n      scene.bounds.max.y = height;\r\n      scene.options.width = width;\r\n      scene.options.height = height;\r\n      scene.canvas.width = width;\r\n      scene.canvas.height = height;\r\n\r\n      const floor = scene.engine.world.bodies[0];\r\n      const roof = scene.engine.world.bodies[1];\r\n      const rightWall = scene.engine.world.bodies[2];\r\n      const leftWall = scene.engine.world.bodies[3];\r\n\r\n      Matter.Body.setPosition(floor, {\r\n        x: width / 2,\r\n        y: height,\r\n      });\r\n\r\n      Matter.Body.setPosition(roof, {\r\n        x: width / 2,\r\n        y: height - height,\r\n      });\r\n\r\n      Matter.Body.setPosition(rightWall, {\r\n        x: width,\r\n        y: height / 2,\r\n      });\r\n\r\n      Matter.Body.setPosition(leftWall, {\r\n        x: width - width,\r\n        y: height / 2,\r\n      });\r\n\r\n      Matter.Body.setVertices(floor, [\r\n        { x: 0, y: height },\r\n        { x: width, y: height },\r\n        { x: width, y: height + 1 },\r\n        { x: 0, y: height + 1 },\r\n      ]);\r\n\r\n      Matter.Body.setVertices(roof, [\r\n        { x: 0, y: height },\r\n        { x: width, y: height },\r\n        { x: width, y: height + 1 },\r\n        { x: 0, y: height + 1 },\r\n      ]);\r\n\r\n      Matter.Body.setVertices(leftWall, [\r\n        { x: 0, y: 0 },\r\n        { x: 1, y: 0 },\r\n        { x: 1, y: height },\r\n        { x: 0, y: height },\r\n      ]);\r\n\r\n      Matter.Body.setVertices(rightWall, [\r\n        { x: 0, y: 0 },\r\n        { x: 1, y: 0 },\r\n        { x: 1, y: height },\r\n        { x: 0, y: height },\r\n      ]);\r\n\r\n      scene.engine.world.gravity.x = 0;\r\n      scene.engine.world.gravity.y = 0;\r\n      scene.engine.world.gravity.isPoint = true;\r\n    }\r\n  }, [scene, constraints]);\r\n\r\n  useEffect(() => {\r\n    if (scene) {\r\n      let { width, height } = constraints;\r\n      let centerX = width / 2;\r\n      let centerY = height / 2;\r\n\r\n      var mouse = Matter.Mouse.create(scene.canvas);\r\n\r\n      if (!firstBall) {\r\n        let attractiveBody = Matter.Bodies.circle(centerX, centerY, 0, {\r\n          isStatic: true,\r\n          restitution: PARTICLE_BOUNCYNESS,\r\n          // example of an attractor function that\r\n          // returns a force vector that applies to bodyB\r\n          plugin: {\r\n            attractors: [\r\n              function (bodyA, bodyB) {\r\n                return {\r\n                  x: (bodyA.position.x - bodyB.position.x) * 1e-6,\r\n                  y: (bodyA.position.y - bodyB.position.y) * 1e-6,\r\n                };\r\n              },\r\n            ],\r\n          },\r\n        });\r\n\r\n        Matter.World.add(scene.engine.world, attractiveBody);\r\n\r\n        setFirstBall(true);\r\n      }\r\n\r\n      // console.log(\"asdasda>>>>\", largestCircle);\r\n\r\n      importedCircleData.forEach((element) => {\r\n        let randomX = Math.floor(Math.random() * -width) + width;\r\n        let randomY = Math.floor(Math.random() * -height) + height;\r\n\r\n        let bodySize = Math.floor(\r\n          (element[selectedColumn] / largestCircle) * maxRadius\r\n        );\r\n\r\n        let normalBody = Matter.Bodies.circle(randomX, randomY, bodySize, {\r\n          label: element,\r\n          restitution: PARTICLE_BOUNCYNESS,\r\n        });\r\n\r\n        Matter.World.add(scene.engine.world, normalBody);\r\n      });\r\n\r\n      scene.mouse = Matter.Mouse.create(scene.canvas);\r\n      var mouseInteractivity = Matter.MouseConstraint.create(scene.engine, {\r\n        mouse: scene.mouse,\r\n        constraint: {\r\n          stiffness: 0.2,\r\n          render: { visible: false },\r\n        },\r\n      });\r\n\r\n      Matter.World.add(scene.engine.world, mouseInteractivity);\r\n\r\n      // Create a On-Mouseup Event-Handler\r\n      Matter.Events.on(mouseInteractivity, \"mouseup\", function (event) {\r\n        var mouseConstraint = event.source;\r\n        var bodies = scene.engine.world.bodies;\r\n\r\n        // console.log(bodies);\r\n        // console.log(mouseConstraint);\r\n\r\n        if (!mouseConstraint.bodyB) {\r\n          for (let i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n            if (\r\n              Matter.Bounds.contains(\r\n                body.bounds,\r\n                mouseConstraint.mouse.position\r\n              )\r\n            ) {\r\n              // var bodyUrl = body.url;\r\n              // console.log(\"Body.Url >> \" + bodyUrl);\r\n              // // Hyperlinking feature\r\n              // if (bodyUrl != undefined) {\r\n              //   window.open(bodyUrl, \"_blank\");\r\n              //   console.log(\"Hyperlink was opened\");\r\n              // }\r\n              // setFirstName(body.label);\r\n              showCircleData(body.label);\r\n              // console.log(body);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [someStateValue]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      {/* <button\r\n        style={{\r\n          cursor: \"pointer\",\r\n          textAlign: \"center\",\r\n          marginBottom: \"16px\",\r\n        }}\r\n        onClick={() => handleClick()}\r\n      >\r\n        Click me - (refresh the page if something goes wrong, or if gravity\r\n        doesn't work)\r\n      </button> */}\r\n\r\n      <div\r\n        ref={boxRef}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":10,"column":27,"nodeType":"95","messageId":"96","endLine":10,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":10,"column":35,"nodeType":"95","messageId":"96","endLine":10,"endColumn":41},{"ruleId":"93","severity":1,"message":"98","line":10,"column":43,"nodeType":"95","messageId":"96","endLine":10,"endColumn":48},{"ruleId":"93","severity":1,"message":"99","line":10,"column":50,"nodeType":"95","messageId":"96","endLine":10,"endColumn":54},{"ruleId":"93","severity":1,"message":"100","line":27,"column":10,"nodeType":"95","messageId":"96","endLine":27,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":8,"column":27,"nodeType":"95","messageId":"96","endLine":8,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":8,"column":35,"nodeType":"95","messageId":"96","endLine":8,"endColumn":41},{"ruleId":"93","severity":1,"message":"98","line":8,"column":43,"nodeType":"95","messageId":"96","endLine":8,"endColumn":48},{"ruleId":"93","severity":1,"message":"101","line":22,"column":3,"nodeType":"95","messageId":"96","endLine":22,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":72,"column":6,"nodeType":"104","endLine":72,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":129,"column":19,"nodeType":"108","endLine":129,"endColumn":34},{"ruleId":"89","replacedBy":"109"},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","severity":1,"message":"111","line":131,"column":9,"nodeType":"95","messageId":"96","endLine":131,"endColumn":14},{"ruleId":"93","severity":1,"message":"112","line":132,"column":9,"nodeType":"95","messageId":"96","endLine":132,"endColumn":15},{"ruleId":"102","severity":1,"message":"113","line":199,"column":6,"nodeType":"104","endLine":199,"endColumn":34,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":247,"column":34,"nodeType":"117","messageId":"118","endLine":247,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":405,"column":31,"nodeType":"117","messageId":"118","endLine":405,"endColumn":33},{"ruleId":"93","severity":1,"message":"119","line":14,"column":30,"nodeType":"95","messageId":"96","endLine":14,"endColumn":51},{"ruleId":"93","severity":1,"message":"120","line":22,"column":9,"nodeType":"95","messageId":"96","endLine":22,"endColumn":21},{"ruleId":"102","severity":1,"message":"121","line":32,"column":6,"nodeType":"104","endLine":32,"endColumn":26,"suggestions":"122"},{"ruleId":"93","severity":1,"message":"123","line":174,"column":11,"nodeType":"95","messageId":"96","endLine":174,"endColumn":16},{"ruleId":"102","severity":1,"message":"124","line":261,"column":6,"nodeType":"104","endLine":261,"endColumn":22,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'button' is assigned a value but never used.","'Skills' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logoInfo'. Either include it or remove the dependency array. If 'setLogos' needs the current value of 'logoInfo', you can also switch to useReducer instead of useState and read 'logoInfo' in the reducer.","ArrayExpression",["128"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["126"],["127"],"'width' is assigned a value but never used.","'height' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'importedData'. Either include it or remove the dependency array.",["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setImportedCircleData' is assigned a value but never used.","'getRandomInt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'someStateValue'. Either include it or remove the dependency array. You can also do a functional update 'setSomeStateValue(s => ...)' if you only need 'someStateValue' in the 'setSomeStateValue' call.",["130"],"'mouse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'constraints', 'firstBall', 'importedCircleData', 'largestCircle', 'maxRadius', 'scene', 'selectedColumn', and 'showCircleData'. Either include them or remove the dependency array. If 'showCircleData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [logoInfo]",{"range":"140","text":"141"},"Update the dependencies array to be: [selectedColumn, dimensions, importedData]",{"range":"142","text":"143"},"Update the dependencies array to be: [importedCircleData, someStateValue]",{"range":"144","text":"145"},"Update the dependencies array to be: [constraints, firstBall, importedCircleData, largestCircle, maxRadius, scene, selectedColumn, showCircleData, someStateValue]",{"range":"146","text":"147"},[1435,1437],"[logoInfo]",[4804,4832],"[selectedColumn, dimensions, importedData]",[1010,1030],"[importedCircleData, someStateValue]",[7288,7304],"[constraints, firstBall, importedCircleData, largestCircle, maxRadius, scene, selectedColumn, showCircleData, someStateValue]"]